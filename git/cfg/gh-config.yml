# What protocol to use when performing git operations. Supported values: ssh, https
git_protocol: https
# What editor gh should run when creating issues, pull requests, etc. If blank, will refer to environment.
editor: code --wait
# When to interactively prompt. This is a global config that cannot be overridden by hostname. Supported values: enabled, disabled
prompt: enabled
# A pager program to send command output to, e.g. "less". Set the value to "cat" to disable the pager.
pager:
# Aliases allow you to create nicknames for gh commands
aliases:
    igrep: '!gh issue list --label="$1" | grep "$2"'
    epicsBy: issue list --author="$1" --label="epic"
    homework: issue list --assignee @me
    bugs: issue list --label=bugs
    co: pr checkout
    prlist: pr list --assignee "$1"
    prc: pr create
    prcf: pr create --fill
    branch-cleanup: '!f() { echo "git branch -r | grep testservice_dev | sed "s%.*/%%g" | xargs -n1 -I{} echo \"git branch -D {} ; git push -f origin :{};\" | bash"; };f'
    branch-delete-older-than: "!f() { echo 'wget -qO- https://gist.githubusercontent.com/r00tvvm/5b1bd1ac3f5f6023b858ae80088044a7/raw/50e03a7b7d734f21f63833ecbd5400fa87d0cc59/delete_branches_older_than.sh | bash'; };f"
    repo-open: repo view -w
    pr-view: pr view -w
    pr-create: "!f(){ local pr_name=${1:-_PR-NAME_}; local pr_body=${2:-_PR-BODY_}; echo gh pr create --title \\\"$pr_name\\\" --body \\\"$pr_body\\\" --head $(git rev-parse --abbrev-ref HEAD); };f"
    pr-create-from-template: "!f(){ local pr_name=${1:-[mcsp- ] _PR-NAME_}; echo gh pr create --title \\\"$pr_name\\\" --web --head $(git rev-parse --abbrev-ref HEAD) --template pull_request_template.md; };f"
    pr-create-from-template-aws-sretools: "!f(){ local pr_name=${1:-[mcsp- ] _PR-NAME_}; echo gh pr create --title \\\"$pr_name\\\" --web --head $(git rev-parse --abbrev-ref HEAD) --template PULL_REQUEST_TEMPLATE/argo_wf_aws_sretools_template.md; };f"
    pr-create-from-template-aws-accounts: "!f(){ local pr_name=${1:-[mcsp- ] _PR-NAME_}; echo gh pr create --title \\\"$pr_name\\\" --web --head $(git rev-parse --abbrev-ref HEAD) --template PULL_REQUEST_TEMPLATE/argo_wf_aws_account_template.md; };f"
    pr-onboarding: '!f() { echo "bash scripts/automation/main.sh -u user1 -gn TestService -pr \"TestService - PR body\" -c config.yaml -issue https://github.ibm.com/ibm-saas-platform/workitems/issues/123 -env dev -skip-git-fork"; };f'
    pr-merge: '!f(){ echo "gh pr checkout 123 ; git switch main ; git merge -S --no-ff - " ; };f'
    pr-edit: '!f() { echo "gh pr edit 214 --body-file .github/PULL_REQUEST_TEMPLATE/argo_wf_aws_account_template.md \ngh pr edit 214 --body-file .github/PULL_REQUEST_TEMPLATE/argo_wf_aws_sretools_template.md"; };f'
    repo-fork: '!f(){ echo "gh repo fork"; };f'
    clone-recent-commits: '!f() { echo https://stackoverflow.com/questions/50992188/how-to-push-a-shallow-clone-to-a-new-repo/50996201#50996201; };f'
# The path to a unix socket through which send HTTP connections. If blank, HTTP traffic will be handled by net/http.DefaultTransport.
http_unix_socket:
# What web browser gh should use when opening URLs. If blank, will refer to environment.
browser:
version: "1"
